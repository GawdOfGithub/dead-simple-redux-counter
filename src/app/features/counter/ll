import { createSlice } from "@reduxjs/toolkit";
import { nanoid } from "@reduxjs/toolkit";

const initialState = [];

export const todoSlice = createSlice({
  name: "todo",
  initialState,
  reducers: {
    addTodo: {
      reducer: (state, action) => {
        state.push(action.payload);
      },
      prepare: (todo, isChecked, isEditable) => {
        const id = nanoid();
        return { payload: { id, todo, isChecked, isEditable } };
      },
    },
  
    filterTodo: {
      reducer: (state, action) => {
        const id = action.payload;
        return state.filter(item => item.id !== id);
      },
    },

    checkTodo: {
      reducer: (state, action) => {
        const id = action.payload;
        return state.map(item =>
          item.id !== id ? item : { ...item, isChecked: !item.isChecked }
        );
      },
    },

    editTodo: {
      reducer: (state, action) => {
        const id = action.payload;
        return state.map(item =>
          item.id !== id ? item : { ...item, isEditable: !item.isEditable }
        );
      },
    },

    saveTodo: {
      reducer: (state, action) => {
        const id = action.payload;
        return state.map(item =>
          item.id !== id ? item : { ...item, isEditable: !item.isEditable }
        );
      },
    },
  },
});

export const { addTodo, filterTodo, editTodo, checkTodo, saveTodo } = todoSlice.actions;
export default todoSlice.reducer;
